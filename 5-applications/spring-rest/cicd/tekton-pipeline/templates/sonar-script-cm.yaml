{{- if .Values.sonar.enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: sonar
data:
  sonar.sh: >
    #!/bin/bash

    sonarUrl={{ .Values.sonar.url }}

    ceTaskUrl=$(cat target/sonar/report-task.txt | grep ceTaskUrl | cut -f2-
    -d=)

    dashboardUrl=$(cat target/sonar/report-task.txt | grep dashboardUrl | cut
    -f2- -d=)

    curl -sf -H \"Accept: application/json\" --connect-timeout  5 -m 15
    ${ceTaskUrl} > /tmp/sonar-results.json

    ceTaskStatus=$(cat /tmp/sonar-results.json | jq -r .[].status)

    analysisId=$(cat /tmp/sonar-results.json | jq -r .[].analysisId)

    while [ ${ceTaskStatus} == "PENDING" ] || [ ${ceTaskStatus} == "IN_PROGRESS"
    ]

    do
        echo "Status is ${ceTaskStatus}, Trying again in 1 seconds"
        sleep 1
        curl -sf -H \"Accept: application/json\" --connect-timeout  5 -m 15 ${ceTaskUrl} > /tmp/sonar-results.json
        ceTaskStatus=$(cat /tmp/sonar-results.json | jq -r .[].status)
        analysisId=$(cat /tmp/sonar-results.json | jq -r .[].analysisId)
    done


    if [ ${ceTaskStatus} == "CANCELED" ] || [ ${ceTaskStatus} == "FAILED" ];
    then
      echo "Build failed because sonar project is ${ceTaskStatus}"
      exit 1
    fi


    ## Second part

    analysisUrl="${sonarUrl}/api/qualitygates/project_status?analysisId=${analysisId}"

    curl -sf -H \"Accept: application/json\" --connect-timeout  5 -m 15
    ${analysisUrl} > /tmp/sonar-analysis-results.json

    projectStatus=$(cat /tmp/sonar-analysis-results.json | jq -r
    .projectStatus.status)


    if [[ ${projectStatus} == "OK" ]]; then
        echo "Huraaaah! You made it :) Sonar Results are good: ${dashboardUrl}"
    else
        echo "Hey Dude not cool :( you are supposed to improve your code quality. Quality Gate is NOT PASSED: ${dashboardUrl}"
        exit 1
    fi

    exit 0
{{- end }}