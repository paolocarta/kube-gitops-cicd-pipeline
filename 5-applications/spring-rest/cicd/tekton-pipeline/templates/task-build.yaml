apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  labels:
{{ include "springboot-tekton.labels" . | nindent 4 }}
  name: maven-and-image-build
spec:
  workspaces:
  - name: maven-repo
  - name: output-area
  params:
    - name: GOALS
      default:
        - package
        - -DskipTests
      description: The Maven goals to run
      type: array
    - name: BUILDER_IMAGE
      default: 'quay.io/buildah/stable:v1.14.8'
      description: The location of the buildah builder image.
      type: string
    - name: DOCKERFILE
      default: ./Dockerfile
      description: Path to the Dockerfile to build.
      type: string
    - name: CONTEXT
      default: .
      description: Path to the directory to use as context.
      type: string
    - name: TLSVERIFY
      default: 'false'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      type: string
    - name: FORMAT 
      default: oci
      description: 'The format of the built container, oci or docker'
      type: string

  resources:
    inputs:
      - name: source
        type: git
    outputs:
      - name: image
        type: image

  steps:   
  - name: package
    image: {{ .Values.maven.image.repository }}:{{ .Values.maven.image.tag }}
    workingDir: /workspace/source
    command:
    - mvn
    args:
    - -Dmaven.repo.local=$(workspaces.maven-repo.path)
    - "$(inputs.params.GOALS)"

  - name: make-upload-dir
    image: quay.io/openshift-pipeline/openshift-cli:v0.8.0
    command: ["mkdir"]
    args:
      - -p
      - /workspace/source/upload

  - name: copy-assets 
    image: quay.io/openshift-pipeline/openshift-cli:v0.8.0
    command: ["cp"]
    args:
      - /workspace/source/target/shift-rest-1.0.0-SNAPSHOT.jar
      - /workspace/source/upload 

  - name: copy-assets-2
    image: quay.io/openshift-pipeline/openshift-cli:v0.8.0
    command: ["cp"]
    args:
      - /workspace/source/Dockerfile
      - /workspace/source/upload

  
  - name: new-version
    image: clamer/kikd:1.0.3
    imagePullPolicy: IfNotPresent
    workingDir: /workspace/source
    script: |
      cp -r /tekton/home/.ssh /root/ && \
      git fetch --tags && jx-release-version > /workspace/output-area/version

  - name: tag-git-repo
    image: clamer/kikd:1.0.3
    imagePullPolicy: IfNotPresent
    workingDir: /workspace/source
    command: ["/bin/bash"]
    args:
      - "-c"
      - "git tag $(cat /workspace/output-area/version)"

  - name: build-image
    image: $(inputs.params.BUILDER_IMAGE)
    workingDir: /workspace/source/upload
    script: |
      buildah bud --format=$(inputs.params.FORMAT) \
      --tls-verify=$(inputs.params.TLSVERIFY) --layers \
      -f "$(inputs.params.DOCKERFILE)" -t "$(outputs.resources.image.url)":"$(cat /workspace/output-area/version)" \
      "$(inputs.params.CONTEXT)"
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: image-push
    image: $(inputs.params.BUILDER_IMAGE)
    workingDir: /workspace/source
    script: |
      buildah push --tls-verify=$(inputs.params.TLSVERIFY) \
      "$(outputs.resources.image.url)":"$(cat /workspace/output-area/version)" \
      "docker://$(outputs.resources.image.url)":"$(cat /workspace/output-area/version)"
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: push-git-tag
    image: clamer/kikd:1.0.3
    imagePullPolicy: IfNotPresent
    workingDir: /workspace/source
    command: ["/bin/bash"]
    args:
      - -c
      - "cp -r /tekton/home/.ssh /root/ && git push origin --tags"

  volumes:
{{- if .Values.sonar.enabled }}
  - name: "$(inputs.params.volumeName)"
    configMap:
      name: "$(inputs.params.CFGNAME)"
{{- end }}
  - name: varlibcontainers
    persistentVolumeClaim:
      claimName: container-layers-spring-rest