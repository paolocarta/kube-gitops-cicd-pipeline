apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
{{ include "springboot-tekton.labels" . | nindent 4 }}
  name: cont-image-build
spec:
  params:
    - name: kanikoImage
      description: "Kaniko image"
      type: string
      default: "gcr.io/kaniko-project/executor:debug"
      # default: "gcr.io/kaniko-project/executor:v1.5.2@sha256:e61c08a27311884ff0d39a3ed4467f3c23444d73e03387fc9c7d5c6442796bae"
    - name: kanikoBuildArgs
      description: "Kaniko build arguments (default: none)"
      # type: array
      # default: []
      type: string
      default: ""
    - name: kanikoContextPath
      description: "Build context used by kaniko (default: ./, see https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)"
      type: string
      default: ./
      # default: $(resources.inputs.git.path) # if "workingDir" inside steps not specified
    - name: dockerfilePath
      description: "Path to the Dockerfile (default: ./Dockerfile)"
      type: string
      default: ./Dockerfile
      # default: $(resources.inputs.git.path)/Dockerfile # if "workingDir" inside steps not specified
    # if output resource not specified
    - name: imageRef
      description: "Reference (name) of the image to build"
      type: string
      default: eu.gcr.io/kube-bootcamp-pc/basic-spring-boot
    - name: image-tag
      type: string

  resources:
    inputs:
      - name: source
        type: git
    outputs:
      - name: image
        type: image

  steps:
  - name: debug
    image: clamer/kikd:1.0.3
    imagePullPolicy: IfNotPresent
    workingDir: /workspace/source
    script: |
      ls -l

  - name: debug3
    image: clamer/kikd:1.0.3
    imagePullPolicy: IfNotPresent
    script: |
      ls -l /workspace

  - name: build-and-push
    image: $(params.kanikoImage)
    workingDir: $(resources.inputs.source.path)
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/kaniko-secret.json
    command:
      - /kaniko/executor
    args:
      - --dockerfile=$(params.dockerfilePath)
      - --context=$(params.kanikoContextPath)
      - --destination=eu.gcr.io/kube-bootcamp-pc/basic-spring-boot:$(params.image-tag)
    volumeMounts:
      - name: gcr-creds
        mountPath: /secret

  - name: push-git-tag
    image: clamer/kikd:1.0.3
    imagePullPolicy: IfNotPresent
    workingDir: /workspace/source
    script: |
      cp -r /tekton/home/.ssh /root/.ssh
      git push origin --tags

  volumes:
{{- if .Values.sonar.enabled }}
  - name: "$(inputs.params.volumeName)"
    configMap:
      name: "$(inputs.params.CFGNAME)"
{{- end }}
    - name: gcr-creds
      secret:
        secretName: gcr-creds